{"ast":null,"code":"\"use strict\";\n\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nvar logger = new Logger(version);\nvar anyGlobal = null;\ntry {\n  anyGlobal = window;\n  if (anyGlobal == null) {\n    throw new Error(\"try next\");\n  }\n} catch (error) {\n  try {\n    anyGlobal = global;\n    if (anyGlobal == null) {\n      throw new Error(\"try next\");\n    }\n  } catch (error) {\n    anyGlobal = {};\n  }\n}\nvar crypto = anyGlobal.crypto || anyGlobal.msCrypto;\nif (!crypto || !crypto.getRandomValues) {\n  logger.warn(\"WARNING: Missing strong random number source\");\n  crypto = {\n    getRandomValues: function getRandomValues(buffer) {\n      return logger.throwError(\"no secure random source avaialble\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"crypto.getRandomValues\"\n      });\n    }\n  };\n}\nexport function randomBytes(length) {\n  if (length <= 0 || length > 1024 || length % 1) {\n    logger.throwArgumentError(\"invalid length\", \"length\", length);\n  }\n  var result = new Uint8Array(length);\n  crypto.getRandomValues(result);\n  return arrayify(result);\n}\n;","map":{"version":3,"sources":["../src.ts/browser-random.ts"],"names":[],"mappings":"AAAA,YAAY;;AAEZ,SAAS,QAAQ,QAAQ,sBAAsB;AAE/C,SAAS,MAAM,QAAQ,uBAAuB;AAC9C,SAAS,OAAO,QAAQ,YAAY;AACpC,IAAM,MAAM,GAAG,IAAI,MAAM,CAAC,OAAO,CAAC;AAElC,IAAI,SAAS,GAAQ,IAAI;AACzB,IAAI;EACA,SAAS,GAAI,MAAc;EAC3B,IAAI,SAAS,IAAI,IAAI,EAAE;IAAE,MAAM,IAAI,KAAK,CAAC,UAAU,CAAC;EAAG;CAC1D,CAAC,OAAO,KAAK,EAAE;EACZ,IAAI;IACA,SAAS,GAAI,MAAc;IAC3B,IAAI,SAAS,IAAI,IAAI,EAAE;MAAE,MAAM,IAAI,KAAK,CAAC,UAAU,CAAC;IAAG;GAC1D,CAAC,OAAO,KAAK,EAAE;IACZ,SAAS,GAAG,CAAA,CAAG;EAClB;AACJ;AAED,IAAI,MAAM,GAAQ,SAAS,CAAC,MAAM,IAAI,SAAS,CAAC,QAAQ;AACxD,IAAI,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE;EAEpC,MAAM,CAAC,IAAI,CAAC,8CAA8C,CAAC;EAE3D,MAAM,GAAG;IACL,eAAe,EAAE,yBAAS,MAAkB,EAAA;MACxC,OAAO,MAAM,CAAC,UAAU,CAAC,mCAAmC,EAAE,MAAM,CAAC,MAAM,CAAC,qBAAqB,EAAE;QAC/F,SAAS,EAAE;OACd,CAAC;IACN;GACH;AACJ;AAED,OAAM,SAAU,WAAW,CAAC,MAAc,EAAA;EACtC,IAAI,MAAM,IAAI,CAAC,IAAI,MAAM,GAAG,IAAI,IAAK,MAAM,GAAG,CAAE,EAAE;IAC9C,MAAM,CAAC,kBAAkB,CAAC,gBAAgB,EAAE,QAAQ,EAAE,MAAM,CAAC;EAChE;EAED,IAAM,MAAM,GAAG,IAAI,UAAU,CAAC,MAAM,CAAC;EACrC,MAAM,CAAC,eAAe,CAAC,MAAM,CAAC;EAC9B,OAAO,QAAQ,CAAC,MAAM,CAAC;AAC3B;AAAC","sourceRoot":"","sourcesContent":["\"use strict\";\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nlet anyGlobal = null;\ntry {\n    anyGlobal = window;\n    if (anyGlobal == null) {\n        throw new Error(\"try next\");\n    }\n}\ncatch (error) {\n    try {\n        anyGlobal = global;\n        if (anyGlobal == null) {\n            throw new Error(\"try next\");\n        }\n    }\n    catch (error) {\n        anyGlobal = {};\n    }\n}\nlet crypto = anyGlobal.crypto || anyGlobal.msCrypto;\nif (!crypto || !crypto.getRandomValues) {\n    logger.warn(\"WARNING: Missing strong random number source\");\n    crypto = {\n        getRandomValues: function (buffer) {\n            return logger.throwError(\"no secure random source avaialble\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"crypto.getRandomValues\"\n            });\n        }\n    };\n}\nexport function randomBytes(length) {\n    if (length <= 0 || length > 1024 || (length % 1)) {\n        logger.throwArgumentError(\"invalid length\", \"length\", length);\n    }\n    const result = new Uint8Array(length);\n    crypto.getRandomValues(result);\n    return arrayify(result);\n}\n;\n//# sourceMappingURL=random.js.map"]},"metadata":{},"sourceType":"module"}